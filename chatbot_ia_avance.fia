imprimer("🤖 === CHATBOT F-IA AVEC IA INTÉGRÉE ===")
imprimer("Chargement du système IA...")

soit config_ia = verifier_config_ia()
imprimer("📊 État de la configuration IA:")
imprimer("  OpenAI:", config_ia["openai"])
imprimer("  DeepSeek:", config_ia["deepseek"])

soit plateformes = lister_plateformes_ia()
si (longueur(plateformes) == 0) {
    imprimer("❌ Aucune plateforme IA configurée!")
    imprimer("💡 Configurez vos clés API dans le fichier .env")
    imprimer("   OPENAI_API_KEY=votre_cle_openai")
    imprimer("   DEEPSEEK_API_KEY=votre_cle_deepseek")
    arreter()
}

imprimer("✅ Plateformes IA disponibles:", plateformes)

soit plateforme_defaut = plateformes[0]
soit modele_defaut = "gpt-4.1-nano"

si (plateforme_defaut == "deepseek") {
    modele_defaut = "deepseek-chat"
}

imprimer("🎯 Plateforme active:", plateforme_defaut)
imprimer("🧠 Modèle:", modele_defaut)

soit nom_bot = "F-IA Assistant Pro"
soit contexte_bot = "Tu es un assistant intelligent créé avec le langage F-IA. Tu es serviable, créatif et tu parles français naturellement."
soit compteur_messages = 0
soit historique = []

fonction ajouter_historique(message, reponse) {
    ajouter(historique, {"message": message, "reponse": reponse})
    si (longueur(historique) > 10) {
        retirer(historique, 0)
    }
}

fonction afficher_aide() {
    imprimer("📖 === AIDE CHATBOT F-IA PRO ===")
    imprimer("Commandes spéciales:")
    imprimer("  /aide       - Afficher cette aide")
    imprimer("  /stats      - Statistiques du bot")
    imprimer("  /historique - Voir les derniers échanges")
    imprimer("  /modele     - Changer de modèle IA")
    imprimer("  /plateforme - Changer de plateforme IA")
    imprimer("  /reset      - Réinitialiser l'historique")
    imprimer("  quitter     - Fermer le chatbot")
    imprimer("")
    imprimer("💬 Parlez-moi naturellement pour une conversation IA!")
}

fonction afficher_stats() {
    imprimer("📊 === STATISTIQUES ===")
    imprimer("Bot:", nom_bot)
    imprimer("Plateforme:", plateforme_defaut)
    imprimer("Modèle:", modele_defaut)
    imprimer("Messages échangés:", compteur_messages)
    imprimer("Historique:", longueur(historique), "échanges")
}

fonction afficher_historique() {
    imprimer("📜 === HISTORIQUE ===")
    si (longueur(historique) == 0) {
        imprimer("Aucun historique disponible.")
    } sinon {
        soit i = 0
        tant_que (i < longueur(historique)) {
            soit echange = historique[i]
            imprimer("👤 Vous:", echange["message"])
            imprimer("🤖 Bot:", echange["reponse"])
            imprimer("---")
            i = i + 1
        }
    }
}

fonction changer_modele() {
    imprimer("🧠 Modèles disponibles pour", plateforme_defaut, ":")
    soit modeles = lister_modeles_ia(plateforme_defaut)
    soit i = 0
    tant_que (i < longueur(modeles)) {
        imprimer("  ", i + 1, ".", modeles[i])
        i = i + 1
    }
    imprimer("Tapez le numéro du modèle ou Entrée pour annuler:")
    soit choix = lire()
    
    si (choix != "") {
        si (choix == "1") {
            modele_defaut = modeles[0]
            imprimer("✅ Modèle changé pour:", modele_defaut)
        } sinon si (choix == "2") {
            si (longueur(modeles) > 1) {
                modele_defaut = modeles[1]
                imprimer("✅ Modèle changé pour:", modele_defaut)
            } sinon {
                imprimer("❌ Numéro invalide")
            }
        } sinon si (choix == "3") {
            si (longueur(modeles) > 2) {
                modele_defaut = modeles[2]
                imprimer("✅ Modèle changé pour:", modele_defaut)
            } sinon {
                imprimer("❌ Numéro invalide")
            }
        } sinon {
            imprimer("❌ Numéro invalide")
        }
    }
}

fonction changer_plateforme() {
    imprimer("🌐 Plateformes disponibles:")
    soit i = 0
    tant_que (i < longueur(plateformes)) {
        imprimer("  ", i + 1, ".", plateformes[i])
        i = i + 1
    }
    imprimer("Tapez le numéro de la plateforme ou Entrée pour annuler:")
    soit choix = lire()
    
    si (choix != "") {
        si (choix == "1") {
            plateforme_defaut = plateformes[0]
            si (plateforme_defaut == "openai") {
                modele_defaut = "gpt-4.1-nano"
            } sinon si (plateforme_defaut == "deepseek") {
                modele_defaut = "deepseek-chat"
            }
            imprimer("✅ Plateforme changée pour:", plateforme_defaut)
            imprimer("🧠 Modèle adapté:", modele_defaut)
        } sinon si (choix == "2") {
            si (longueur(plateformes) > 1) {
                plateforme_defaut = plateformes[1]
                si (plateforme_defaut == "openai") {
                    modele_defaut = "gpt-3.5"
                } sinon si (plateforme_defaut == "deepseek") {
                    modele_defaut = "deepseek-chat"
                }
                imprimer("✅ Plateforme changée pour:", plateforme_defaut)
                imprimer("🧠 Modèle adapté:", modele_defaut)
            } sinon {
                imprimer("❌ Numéro invalide")
            }
        } sinon {
            imprimer("❌ Numéro invalide")
        }
    }
}

imprimer("")
imprimer("🎉 Bienvenue dans", nom_bot, "!")
imprimer("Propulsé par", plateforme_defaut, "avec le modèle", modele_defaut)
afficher_aide()

tant_que (vrai) {
    imprimer("")
    imprimer("👤 Vous:")
    soit message_utilisateur = lire()
    
    si (message_utilisateur == "quitter") {
        imprimer("👋 Merci d'avoir utilisé", nom_bot, "!")
        imprimer("💻 Développé avec le langage F-IA")
        arreter()
    } sinon si (message_utilisateur == "/aide") {
        afficher_aide()
    } sinon si (message_utilisateur == "/stats") {
        afficher_stats()
    } sinon si (message_utilisateur == "/historique") {
        afficher_historique()
    } sinon si (message_utilisateur == "/modele") {
        changer_modele()
    } sinon si (message_utilisateur == "/plateforme") {
        changer_plateforme()
    } sinon si (message_utilisateur == "/reset") {
        historique = []
        compteur_messages = 0
        imprimer("🔄 Historique réinitialisé!")
    } sinon si (message_utilisateur == "") {
        imprimer("💭 Tapez quelque chose ou /aide pour l'aide")
    } sinon {
        imprimer("🤖", nom_bot, "réfléchit...")
        
        soit reponse_ia = generer_reponse_bot(
            plateforme_defaut,
            modele_defaut,
            message_utilisateur,
            contexte_bot
        )
        
        imprimer("🤖", nom_bot, ":", reponse_ia)
        
        ajouter_historique(message_utilisateur, reponse_ia)
        compteur_messages = compteur_messages + 1
    }
}
